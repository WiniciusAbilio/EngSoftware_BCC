{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\html e css\\\\react\\\\Engsoftware\\\\EngSoftware_BCC\\\\src\\\\components\\\\dragDropFilesV2.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// ... (other imports and code)\n\nconst DragDropFilesV2 = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const inputRef = useRef();\n\n  // ... (other functions)\n\n  // send files to the server\n  const handleUpload = () => {\n    const formData = new FormData();\n    const filesToUpload = getFiles(); // Use the getFiles method here\n    filesToUpload.forEach((file, index) => {\n      formData.append(`file${index + 1}`, file);\n    });\n\n    // Uncomment the fetch block when you have the server endpoint\n    /*\r\n    fetch(\"link\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Upload successful\", data);\r\n        setShowPopup(true);\r\n        setFiles(null);\r\n        setSelectedFiles([]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error uploading files:\", error);\r\n      });\r\n    */\n  };\n\n  // ... (other functions)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(DragDropFilesV2, \"wFk22hRSmBU8M0bMGu7d3yS1LdY=\");\n_c = DragDropFilesV2;\nexport default DragDropFilesV2;\nvar _c;\n$RefreshReg$(_c, \"DragDropFilesV2\");","map":{"version":3,"names":["DragDropFilesV2","_s","files","setFiles","useState","selectedFiles","setSelectedFiles","showPopup","setShowPopup","inputRef","useRef","handleUpload","formData","FormData","filesToUpload","getFiles","forEach","file","index","append","_jsxDEV","_Fragment","children","className","onDragOver","handleDragOver","onDrop","handleDrop","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/html e css/react/Engsoftware/EngSoftware_BCC/src/components/dragDropFilesV2.js"],"sourcesContent":["// ... (other imports and code)\r\n\r\nconst DragDropFilesV2 = () => {\r\n    const [files, setFiles] = useState(null);\r\n    const [selectedFiles, setSelectedFiles] = useState([]);\r\n    const [showPopup, setShowPopup] = useState(false);\r\n    const inputRef = useRef();\r\n  \r\n    // ... (other functions)\r\n  \r\n    // send files to the server\r\n    const handleUpload = () => {\r\n      const formData = new FormData();\r\n      const filesToUpload = getFiles(); // Use the getFiles method here\r\n      filesToUpload.forEach((file, index) => {\r\n        formData.append(`file${index + 1}`, file);\r\n      });\r\n  \r\n      // Uncomment the fetch block when you have the server endpoint\r\n      /*\r\n      fetch(\"link\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Upload successful\", data);\r\n          setShowPopup(true);\r\n          setFiles(null);\r\n          setSelectedFiles([]);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error uploading files:\", error);\r\n        });\r\n      */\r\n    };\r\n  \r\n    // ... (other functions)\r\n  \r\n    return (\r\n      <>\r\n        <div className=\"dropzone\" onDragOver={handleDragOver} onDrop={handleDrop}>\r\n          {/* ... (other JSX) */}\r\n          <button onClick={handleUpload}>Upload</button>\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default DragDropFilesV2;\r\n  "],"mappings":";;;;AAAA;;AAEA,MAAMA,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMK,QAAQ,GAAGC,MAAM,CAAC,CAAC;;EAEzB;;EAEA;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,MAAMC,aAAa,GAAGC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClCD,aAAa,CAACE,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrCN,QAAQ,CAACO,MAAM,CAAE,OAAMD,KAAK,GAAG,CAAE,EAAC,EAAED,IAAI,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;;EAED;;EAEA,oBACEG,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACEF,OAAA;MAAKG,SAAS,EAAC,UAAU;MAACC,UAAU,EAAEC,cAAe;MAACC,MAAM,EAAEC,UAAW;MAAAL,QAAA,eAEvEF,OAAA;QAAQQ,OAAO,EAAEjB,YAAa;QAAAW,QAAA,EAAC;MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC,gBACN,CAAC;AAEP,CAAC;AAAC/B,EAAA,CA7CED,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA+CnB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}