{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\html e css\\\\react\\\\Engsoftware\\\\EngSoftware_BCC\\\\src\\\\components\\\\estadosCidades.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CidadesPorEstado() {\n  _s();\n  const [estados, setEstados] = useState([]);\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\n  const [cidades, setCidades] = useState([]);\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\n  useEffect(() => {\n    // Fazer uma solicitação GET para obter a lista de estados usando Fetch\n    fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => response.json()).then(data => {\n      setEstados(data);\n    }).catch(error => {\n      console.error('Erro ao obter a lista de estados:', error);\n    });\n  }, []);\n  const handleEstadoChange = event => {\n    const estado = event.target.value;\n    setEstadoSelecionado(estado);\n    // Limpar a cidade selecionada quando o estado muda\n    setCidadeSelecionada('');\n    if (estado) {\n      // Fazer uma solicitação GET para obter a lista de municípios do estado selecionado usando Fetch\n      fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estado}/municipios`).then(response => response.json()).then(data => {\n        setCidades(data);\n      }).catch(error => {\n        console.error('Erro ao obter a lista de municípios:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"estado\",\n        name: \"estado\",\n        required: true,\n        className: `mt-1 custom-select`,\n        onChange: handleEstadoChange,\n        value: estadoSelecionado,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione um estado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), estados.map(estado => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: estado.sigla,\n          children: estado.nome\n        }, estado.sigla, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"cidade\",\n        name: \"cidade\",\n        required: true,\n        className: `mt-1 custom-select`,\n        onChange: e => setCidadeSelecionada(e.target.value),\n        value: cidadeSelecionada,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione uma cidade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), cidades.map(cidade => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cidade.nome,\n          children: cidade.nome\n        }, cidade.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n_s(CidadesPorEstado, \"hTrraGNsg+oCKc7uXIFWScFBMas=\");\n_c = CidadesPorEstado;\nexport default CidadesPorEstado;\nvar _c;\n$RefreshReg$(_c, \"CidadesPorEstado\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CidadesPorEstado","_s","estados","setEstados","estadoSelecionado","setEstadoSelecionado","cidades","setCidades","cidadeSelecionada","setCidadeSelecionada","fetch","then","response","json","data","catch","error","console","handleEstadoChange","event","estado","target","value","children","style","marginBottom","id","name","required","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","sigla","nome","e","cidade","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/html e css/react/Engsoftware/EngSoftware_BCC/src/components/estadosCidades.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles.css';\r\n\r\n\r\n\r\nfunction CidadesPorEstado() {\r\n  const [estados, setEstados] = useState([]);\r\n  const [estadoSelecionado, setEstadoSelecionado] = useState('');\r\n  const [cidades, setCidades] = useState([]);\r\n  const [cidadeSelecionada, setCidadeSelecionada] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fazer uma solicitação GET para obter a lista de estados usando Fetch\r\n    fetch('https://servicodados.ibge.gov.br/api/v1/localidades/estados')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setEstados(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Erro ao obter a lista de estados:', error);\r\n      });\r\n  }, []);\r\n\r\n  const handleEstadoChange = (event) => {\r\n    const estado = event.target.value;\r\n    setEstadoSelecionado(estado);\r\n    // Limpar a cidade selecionada quando o estado muda\r\n    setCidadeSelecionada('');\r\n\r\n    if (estado) {\r\n      // Fazer uma solicitação GET para obter a lista de municípios do estado selecionado usando Fetch\r\n      fetch(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${estado}/municipios`)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          setCidades(data);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Erro ao obter a lista de municípios:', error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n<div>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <select\r\n          id=\"estado\"\r\n          name=\"estado\"\r\n          required\r\n          className={`mt-1 custom-select`}\r\n          onChange={handleEstadoChange}\r\n          value={estadoSelecionado}\r\n        >\r\n          <option value=\"\">Selecione um estado</option>\r\n          {estados.map((estado) => (\r\n            <option key={estado.sigla} value={estado.sigla}>\r\n              {estado.nome}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        <select\r\n          id=\"cidade\"\r\n          name=\"cidade\"\r\n          required\r\n          className={`mt-1 custom-select`}\r\n          onChange={(e) => setCidadeSelecionada(e.target.value)}\r\n          value={cidadeSelecionada}\r\n        >\r\n          <option value=\"\">Selecione uma cidade</option>\r\n          {cidades.map((cidade) => (\r\n            <option key={cidade.id} value={cidade.nome}>\r\n              {cidade.nome}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CidadesPorEstado;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}