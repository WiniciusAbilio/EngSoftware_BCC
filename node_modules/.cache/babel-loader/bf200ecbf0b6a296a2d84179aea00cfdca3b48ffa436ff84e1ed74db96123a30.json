{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\html e css\\\\react\\\\Engsoftware\\\\EngSoftware_BCC\\\\src\\\\components\\\\dragDropFilesV2.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport \"../styles/stylesAnalista.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DragDropFilesV2 = () => {\n  _s();\n  const [files, setFiles] = useState(null);\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [showPopup, setShowPopup] = useState(false);\n  const inputRef = useRef();\n  const handleDragOver = event => {\n    event.preventDefault();\n  };\n  const handleDrop = event => {\n    event.preventDefault();\n    const droppedFiles = event.dataTransfer.files;\n    setFiles(droppedFiles);\n    setSelectedFiles(Array.from(droppedFiles));\n  };\n  const getFiles = () => selectedFiles; // Define getFiles as a function\n\n  // send files to the server\n  const handleUpload = () => {\n    const formData = new FormData();\n    const filesToUpload = getFiles(); // Use the getFiles method here\n    filesToUpload.forEach((file, index) => {\n      formData.append(`file${index + 1}`, file);\n    });\n\n    // Uncomment the fetch block when you have the server endpoint\n    /*\r\n    fetch(\"link\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Upload successful\", data);\r\n        setShowPopup(true);\r\n        setFiles(null);\r\n        setSelectedFiles([]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error uploading files:\", error);\r\n      });\r\n    */\n  };\n\n  const closePopup = () => {\n    setShowPopup(false);\n  };\n  if (files) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"uploads\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: selectedFiles.map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: file.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFiles(null),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpload,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Imagens inseridas com sucesso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closePopup,\n          children: \"Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      onDragOver: handleDragOver,\n      onDrop: handleDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Arraste as imagens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Ou\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: event => {\n          setFiles(event.target.files);\n          setSelectedFiles(Array.from(event.target.files));\n        },\n        hidden: true,\n        accept: \"image/png, image/jpeg\",\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => inputRef.current.click(),\n        children: \"Selecione as imagens\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(DragDropFilesV2, \"wFk22hRSmBU8M0bMGu7d3yS1LdY=\");\n_c = DragDropFilesV2;\nexport default DragDropFilesV2;\nvar _c;\n$RefreshReg$(_c, \"DragDropFilesV2\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","DragDropFilesV2","_s","files","setFiles","selectedFiles","setSelectedFiles","showPopup","setShowPopup","inputRef","handleDragOver","event","preventDefault","handleDrop","droppedFiles","dataTransfer","Array","from","getFiles","handleUpload","formData","FormData","filesToUpload","forEach","file","index","append","closePopup","className","children","map","idx","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDragOver","onDrop","type","multiple","onChange","target","hidden","accept","ref","current","click","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/html e css/react/Engsoftware/EngSoftware_BCC/src/components/dragDropFilesV2.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport \"../styles/stylesAnalista.css\";\r\n\r\nconst DragDropFilesV2 = () => {\r\n  const [files, setFiles] = useState(null);\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const droppedFiles = event.dataTransfer.files;\r\n    setFiles(droppedFiles);\r\n    setSelectedFiles(Array.from(droppedFiles));\r\n  };\r\n\r\n  const getFiles = () => selectedFiles; // Define getFiles as a function\r\n\r\n  // send files to the server\r\n  const handleUpload = () => {\r\n    const formData = new FormData();\r\n    const filesToUpload = getFiles(); // Use the getFiles method here\r\n    filesToUpload.forEach((file, index) => {\r\n      formData.append(`file${index + 1}`, file);\r\n    });\r\n\r\n    // Uncomment the fetch block when you have the server endpoint\r\n    /*\r\n    fetch(\"link\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\"Upload successful\", data);\r\n        setShowPopup(true);\r\n        setFiles(null);\r\n        setSelectedFiles([]);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error uploading files:\", error);\r\n      });\r\n    */\r\n  };\r\n\r\n  const closePopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  if (files) {\r\n    return (\r\n      <div className=\"uploads\">\r\n        <ul>\r\n          {selectedFiles.map((file, idx) => (\r\n            <li key={idx}>{file.name}</li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"actions\">\r\n          <button onClick={() => setFiles(null)}>Cancelar</button>\r\n          <button onClick={handleUpload}>Upload</button>\r\n        </div>\r\n        {showPopup && (\r\n          <div className=\"popup\">\r\n            <p>Imagens inseridas com sucesso</p>\r\n            <button onClick={closePopup}>Fechar</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"dropzone\" onDragOver={handleDragOver} onDrop={handleDrop}>\r\n        <h1>Arraste as imagens</h1>\r\n        <h1>Ou</h1>\r\n        <input\r\n          type=\"file\"\r\n          multiple\r\n          onChange={(event) => {\r\n            setFiles(event.target.files);\r\n            setSelectedFiles(Array.from(event.target.files));\r\n          }}\r\n          hidden\r\n          accept=\"image/png, image/jpeg\"\r\n          ref={inputRef}\r\n        />\r\n        <button onClick={() => inputRef.current.click()}>Selecione as imagens</button>\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragDropFilesV2;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMc,QAAQ,GAAGb,MAAM,CAAC,CAAC;EAEzB,MAAMc,cAAc,GAAIC,KAAK,IAAK;IAChCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,UAAU,GAAIF,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAME,YAAY,GAAGH,KAAK,CAACI,YAAY,CAACZ,KAAK;IAC7CC,QAAQ,CAACU,YAAY,CAAC;IACtBR,gBAAgB,CAACU,KAAK,CAACC,IAAI,CAACH,YAAY,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMI,QAAQ,GAAGA,CAAA,KAAMb,aAAa,CAAC,CAAC;;EAEtC;EACA,MAAMc,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B,MAAMC,aAAa,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAClCI,aAAa,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MACrCL,QAAQ,CAACM,MAAM,CAAE,OAAMD,KAAK,GAAG,CAAE,EAAC,EAAED,IAAI,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC;;EAED,MAAMG,UAAU,GAAGA,CAAA,KAAM;IACvBnB,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,IAAIL,KAAK,EAAE;IACT,oBACEL,OAAA;MAAK8B,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtB/B,OAAA;QAAA+B,QAAA,EACGxB,aAAa,CAACyB,GAAG,CAAC,CAACN,IAAI,EAAEO,GAAG,kBAC3BjC,OAAA;UAAA+B,QAAA,EAAeL,IAAI,CAACQ;QAAI,GAAfD,GAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAC9B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACLtC,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAC,QAAA,gBACtB/B,OAAA;UAAQuC,OAAO,EAAEA,CAAA,KAAMjC,QAAQ,CAAC,IAAI,CAAE;UAAAyB,QAAA,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACxDtC,OAAA;UAAQuC,OAAO,EAAElB,YAAa;UAAAU,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,EACL7B,SAAS,iBACRT,OAAA;QAAK8B,SAAS,EAAC,OAAO;QAAAC,QAAA,gBACpB/B,OAAA;UAAA+B,QAAA,EAAG;QAA6B;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCtC,OAAA;UAAQuC,OAAO,EAAEV,UAAW;UAAAE,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;EAEA,oBACEtC,OAAA,CAAAE,SAAA;IAAA6B,QAAA,eACE/B,OAAA;MAAK8B,SAAS,EAAC,UAAU;MAACU,UAAU,EAAE5B,cAAe;MAAC6B,MAAM,EAAE1B,UAAW;MAAAgB,QAAA,gBACvE/B,OAAA;QAAA+B,QAAA,EAAI;MAAkB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BtC,OAAA;QAAA+B,QAAA,EAAI;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACXtC,OAAA;QACE0C,IAAI,EAAC,MAAM;QACXC,QAAQ;QACRC,QAAQ,EAAG/B,KAAK,IAAK;UACnBP,QAAQ,CAACO,KAAK,CAACgC,MAAM,CAACxC,KAAK,CAAC;UAC5BG,gBAAgB,CAACU,KAAK,CAACC,IAAI,CAACN,KAAK,CAACgC,MAAM,CAACxC,KAAK,CAAC,CAAC;QAClD,CAAE;QACFyC,MAAM;QACNC,MAAM,EAAC,uBAAuB;QAC9BC,GAAG,EAAErC;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACFtC,OAAA;QAAQuC,OAAO,EAAEA,CAAA,KAAM5B,QAAQ,CAACsC,OAAO,CAACC,KAAK,CAAC,CAAE;QAAAnB,QAAA,EAAC;MAAoB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9EtC,OAAA;QAAQuC,OAAO,EAAElB,YAAa;QAAAU,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C;EAAC,gBACN,CAAC;AAEP,CAAC;AAAClC,EAAA,CA7FID,eAAe;AAAAgD,EAAA,GAAfhD,eAAe;AA+FrB,eAAeA,eAAe;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}