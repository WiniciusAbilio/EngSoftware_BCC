version: '3.3'


services:
  # Banco de dados
  database:
    image: mysql:8.2.0
    restart: always
    container_name: engsoftware-database
    environment:
      MYSQL_DATABASE: 'engsoftware'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
        # Para ser acessado de qualquer client MySQL na m치quina host pelo
        # 'localhost:3306'
    expose:
      - '3306'
    networks:
      - 'engsoftware'
    volumes:
      # Monta o diret칩rio ./database contendo o c칩digo SQL para inicializar o
      # banco de dados. Assim ele ser치 executado quando a imagem do MySQL for
      # inicializada.
        - ./database:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "curl" ,"localhost:3306", "--output", "test"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    restart: always
    container_name: engsoftware-backend
    environment:
      DEBUG: true
      SECRET_KEY: 'django-insecure-6@mj2-+r5(2thv&gk6ppoanfubc4er)8ls3!wv!e)3!%ezv-%3'
      CORS_ALLOW_ALL_ORIGINS: true
      FRONTEND_URL: 'http://engsoftware-frontend:3000'
      DATABASE_NAME: 'engsoftware'
      DATABASE_USER: 'root'
      DATABASE_PASSWORD: 'password'
      DATABASE_HOST: 'engsoftware-database'
      DATABASE_PORT: ''
    ports:
      - '8000:8000'
    expose:
      - '8000'
    links:
      - 'database'
    networks:
      - 'engsoftware'
    depends_on:
      database:
        condition: service_healthy

  # Frontend
  frontend:
    build: .
    restart: always
    container_name: engsoftware-frontend
    environment:
      REACT_APP_BACKEND_URL: 'http://engsoftware-backend:8000'
    ports:
      - '3000:3000'
    expose:
      - '3000'
    networks:
      - 'engsoftware'


networks:
  engsoftware:
    driver: bridge
